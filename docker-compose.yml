version: "3.8"

services:
  mysqldb:
    image: mysql
    container_name: lhince-db
    environment:
      - MYSQL_ROOT_PASSWORD=lhince
      - MYSQL_DATABASE=lhince
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - shared-network
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files:/data_backup/data

  nginx:
    image: nginx:latest
    container_name: lhince-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - shared-network

  api:
    container_name: lhince-api
    image: lhince-api:1.0.0
    build:
      context: backend
      target: production
      dockerfile: Dockerfile
    command: sh -c './bin/wait-for -t 0 mysqldb:3306 -- yarn start:prod'
    depends_on:
      - mysqldb
    networks:
      - shared-network
    ports:
      - 9000:9000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://lhince-api:9000"]
      interval: 5s
      timeout: 3s
      retries: 6

  web:
    container_name: lhince-web
    image: lhince-web:1.0.0
    build:
      context: frontend
      target: production
      dockerfile: Dockerfile
    command: yarn run start:prod
    ports:
      - 3000:3000
    networks:
      - shared-network
    restart: unless-stopped

networks:
  shared-network:

volumes:
  db-config:
  db-data: